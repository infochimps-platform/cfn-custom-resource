require 'cloud-formation/custom-resource/base-handler'

module CloudFormation
  module CustomResource
    module IPA
      class CNAME < CloudFormation::CustomResource::BaseHandler

        resource_types "Custom::IPA-CNAME"

        mandatory_parameters *%w(Zone RecordName HostName)

        def initialize *args
          super *args
        end

        def kerberos_environment
          { 'KRB5CCNAME' => "/tmp/krb-#{requestId}",
            'KEYTAB'     => "/home/howech/sns/dns.keytab",
            'PRINCIPAL'  => "cfn-dns-resource"
          }
        end

        def with_kerberos_tickets
          result = nil

          begin
            system(kerberos_environment, "kinit -kt $KEYTAB $PRINCIPAL")
            return yield
          rescue Exception => m
            self.reason = m.inspect
            return false
          ensure
            system(kerberos_environment, "kdestroy")
          end
        end

        def ipa_dns_cname_record action, properties
          zone, record, hostname = ['Zone', 'RecordName', 'HostName'].map { |x| properties[x] }
          puts "ipa dnsrecord-#{action} #{zone} #{record} --cname-rec=#{hostname}"
          ENV['KRB5CCNAME'] = kerberos_environment['KRB5CCNAME']
          self.reason = `ipa dnsrecord-#{action} #{zone} #{record} --cname-rec=#{hostname}`
          return $?.to_i == 0
        end

        def create(properties)
          unless validate!(properties)
            return false
          end

          self.physicalId = "cname-#{properties['RecordName']}.#{properties['Zone']}"

          with_kerberos_tickets do
            ipa_dns_cname_record('add', properties)
          end
        end

        def delete(properties)
          unless validate!(properties)
            return false
          end

          # If for some reason a Create request fails, we will eventually
          # be getting a corresponding delete request. One of the ways
          # that a create could fail is if the cname record already exists,
          # in which case, we should not be deleting it.

          # Failed create requests get assigned a physical resource id by
          # cloudformation, and will not look like the physical resource
          # ids generated by a properly created resource.

          # We should only try to delete ipa records if the physical resource id
          # is in the format that we set.

          unless self.physicalId =~ /^cname-/
            return true
          end

          with_kerberos_tickets do
            ipa_dns_cname_record('del', properties)
          end

          # Most likely, any failure was because the record
          # did not exists, so dont pass the failure on.
          true
        end

        def update(new_properties, old_properties)
          unless validate!(new_properties)
            return false
          end

          unless validate!(old_properties)
            return false
          end

          if new_properties['Zone'] == old_properties['Zone']
            with_kerberos_tickets do
              ipa_dns_cname_record('mod', new_properties)
            end
          else
            with_kerberos_tickets do
              ipa_dns_cname_record('del', old_properties)
              ipa_dns_cname_record('add', new_properties)
            end
          end
        end
      end
    end
  end
end
